#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <vector>
#include <cstdint>

#include <emulator/components/AbstractComponent.h>

namespace emulator6502
{

using Word = uint16_t;

//////////////////////////////////////////////////////////////
///
/// @class PixelDisplay
///
/// @brief A UI component that simulates a pixel-based display
///        for the emulator. It renders a grid of pixels where
///        memory values map to colors, starting from a base
///        address.
///
//////////////////////////////////////////////////////////////
class PixelDisplay : public AbstractComponent
{
public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Default constructor
    ///
    //////////////////////////////////////////////////////////////
    PixelDisplay() = default;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Initializes the pixel display component.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Init() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the pixel display in the emulator UI.
    ///        Maps memory values to colored cells in a grid.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Render() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Cleans up resources used by the pixel display.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Destroy() noexcept override;

private:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders a single cell in the color palette.
    ///
    /// @param idx Index of the color in the palette (0â€“15).
    ///
    //////////////////////////////////////////////////////////////
    void RenderPaletteCell(uint32_t idx) const;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the color palette popup window, showing
    ///        all available colors in rows.
    ///
    //////////////////////////////////////////////////////////////
    void RenderPalettePopup() const;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the "Show Color Palette" button and
    ///        handles popup opening.
    ///
    //////////////////////////////////////////////////////////////
    void RenderPaletteButton() const;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders a single pixel in the display grid.
    ///
    /// @param x X-coordinate in the grid.
    /// @param y Y-coordinate in the grid.
    ///
    //////////////////////////////////////////////////////////////
    void RenderPixelAt(uint32_t x, uint32_t y) const;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the full pixel grid for the display.
    ///
    //////////////////////////////////////////////////////////////
    void RenderPixelGrid() const;
private:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Size of the pixel display grid (GRID_SIZE x GRID_SIZE).
    ///
    //////////////////////////////////////////////////////////////
    static const uint32_t GRID_SIZE = 32;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Starting memory address used for pixel data.
    ///
    //////////////////////////////////////////////////////////////
    static const Word START_ADDR = 0x0200;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Total number of supported colors.
    ///
    //////////////////////////////////////////////////////////////
    static constexpr uint32_t COLORS_COUNT = 16;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Number of colors shown per row in the color palette.
    ///
    //////////////////////////////////////////////////////////////
    static constexpr uint32_t COLORS_PER_ROW = COLORS_COUNT / 2;
};

} // namespace emulator6502

