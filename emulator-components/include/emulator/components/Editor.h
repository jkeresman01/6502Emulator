#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <string>

#include <emulator/components/AbstractComponent.h>

namespace emulator6502
{

//////////////////////////////////////////////////////////////
///
/// @class Editor
///
/// @brief An editor component for writing and editing assembly
///        source code within the emulator UI.
///
//////////////////////////////////////////////////////////////
class Editor : public AbstractComponent
{
public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Default constructor
    ///
    //////////////////////////////////////////////////////////////
    Editor() = default;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Initializes the editor component.
    ///        Called before rendering begins.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Init() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the editor UI, allowing the user to type
    ///        or modify assembly source code.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Render() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Cleans up any resources used by the editor.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Destroy() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Retrieves the current editor contents as text.
    ///
    /// @return A string containing the assembly source code
    ///         currently written in the editor.
    ///
    //////////////////////////////////////////////////////////////
    std::string GetText() const;
};

} // namespace emulator6502

