#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <vector>
#include <cstdint>

#include <emulator/components/AbstractComponent.h>

namespace emulator6502
{

using Byte = uint8_t;

//////////////////////////////////////////////////////////////
///
/// @class MemoryLayout
///
/// @brief A UI component that displays the memory layout of
///        the emulator, typically in a structured view to
///        help visualize memory regions and contents.
///
//////////////////////////////////////////////////////////////
class MemoryLayout : public AbstractComponent
{
public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Default constructor
    ///
    //////////////////////////////////////////////////////////////
    MemoryLayout() = default;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Initializes the memory layout component.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Init() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Renders the memory layout in the emulator UI.
    ///        Typically displays memory addresses, values,
    ///        and their organization.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Render() noexcept override;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Cleans up resources used by the memory layout.
    ///
    //////////////////////////////////////////////////////////////
    virtual void Destroy() noexcept override;
};

} // namespace emulator6502

